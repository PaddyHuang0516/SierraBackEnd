@model NiceAdmin.Models.ViewModels.PromotionsVM.PromotionEditVM

@{
    ViewBag.Title = "Edit";
}

<main id="main" class="main">
    <div class="pagetitle">
        <h1>編輯促銷活動</h1>
        <nav>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">首頁</a></li>
                <li class="breadcrumb-item">   行銷管理  </li>
                <li class="breadcrumb-item ">  促銷活動清單  </li>
                <li class="breadcrumb-item active">  編輯促銷活動  </li>
            </ol>
        </nav>
    </div>
    <!-- End Page Title -->
    <section class="section">


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="row">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.PromotionId)
            <div class="mb-3">
                @Html.LabelFor(model => model.PromotionImage, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.PromotionImage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PromotionImage, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                @Html.LabelFor(model => model.CouponId, "CouponId", htmlAttributes: new { @class = "form-label" })
                @Html.DropDownList("CouponId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CouponId, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                @Html.LabelFor(model => model.PromotionName, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.PromotionName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PromotionName, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                @Html.LabelFor(model => model.LaunchAt, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.LaunchAt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LaunchAt, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                @Html.LabelFor(model => model.StartAt, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.StartAt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartAt, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                @Html.LabelFor(model => model.EndAt, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.EndAt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndAt, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                @Html.LabelFor(model => model.CreateAt, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.CreateAt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreateAt, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </section>
</main>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
