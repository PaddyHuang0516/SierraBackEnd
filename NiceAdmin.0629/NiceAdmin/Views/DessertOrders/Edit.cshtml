@model NiceAdmin.Models.EFModels.DessertOrder

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="row">
        <h4>DessertOrder</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.DessertOrderId)
        <div class="mb-3">
            @Html.LabelFor(model => model.MemberId, "MemberId", htmlAttributes: new { @class = "form-label" })
                @Html.DropDownList("MemberId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MemberId, "", new { @class = "text-danger" })
        </div>
        <div class="mb-3">
            @Html.LabelFor(model => model.DessertOrderStatusId, "DessertOrderStatusId", htmlAttributes: new { @class = "form-label" })
                @Html.DropDownList("DessertOrderStatusId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DessertOrderStatusId, "", new { @class = "text-danger" })
        </div>
        <div class="mb-3">
            @Html.LabelFor(model => model.CouponId, "CouponId", htmlAttributes: new { @class = "form-label" })
                @Html.DropDownList("CouponId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CouponId, "", new { @class = "text-danger" })
        </div>
        <div class="mb-3">
            @Html.LabelFor(model => model.CreateTime, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.CreateTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CreateTime, "", new { @class = "text-danger" })
        </div>
        <div class="mb-3">
            @Html.LabelFor(model => model.Recipient, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.Recipient, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Recipient, "", new { @class = "text-danger" })
        </div>
        <div class="mb-3">
            @Html.LabelFor(model => model.RecipientPhone, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.RecipientPhone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RecipientPhone, "", new { @class = "text-danger" })
        </div>
        <div class="mb-3">
            @Html.LabelFor(model => model.RecipientAddress, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.RecipientAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RecipientAddress, "", new { @class = "text-danger" })
        </div>
        <div class="mb-3">
            @Html.LabelFor(model => model.ShippingFee, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.ShippingFee, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ShippingFee, "", new { @class = "text-danger" })
        </div>
        <div class="mb-3">
            @Html.LabelFor(model => model.DessertOrderTotal, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.DessertOrderTotal, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DessertOrderTotal, "", new { @class = "text-danger" })
        </div>
        <div class="mb-3">
            @Html.LabelFor(model => model.DeliveryMethod, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.DeliveryMethod, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DeliveryMethod, "", new { @class = "text-danger" })
        </div>
        <div class="mb-3">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
        </div>
        <div class="mb-3">
            @Html.LabelFor(model => model.OrderCancellationReason, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.OrderCancellationReason, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OrderCancellationReason, "", new { @class = "text-danger" })
        </div>
        <div class="mb-3">
            @Html.LabelFor(model => model.DiscountInfo, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.DiscountInfo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DiscountInfo, "", new { @class = "text-danger" })
        </div>
        <div class="mb-3">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
