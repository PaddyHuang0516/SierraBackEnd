@model NiceAdmin.Models.ViewModels.DessertEditVM

@{
    ViewBag.Title = "Edit";
}


<main id="main" class="main">
    <div class="pagetitle">
        <h1>編輯清單</h1>
        <nav>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">首頁</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Index","Desserts")">甜點管理</a></li>
                <li class="breadcrumb-item active"><a href="@Url.Action("Edit","Desserts")">編輯甜點</a></li>
            </ol>
        </nav>
    </div>
    <!-- End Page Title -->

    @using (Html.BeginForm("Edit", "Desserts", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

<div class="row">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.DessertId)

    <div class="mb-3">
        @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "form-label" })

        @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-select" })
        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })

    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.DessertName, htmlAttributes: new { @class = "form-label" })

        @Html.EditorFor(model => model.DessertName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.DessertName, "", new { @class = "text-danger" })

    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label" })

        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "form-label" })

        @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "form-label" })

        <div class="checkbox">
            @Html.EditorFor(model => model.Status)
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="mb-3">
            <label for="images" class="form-label">Dessert Images:</label>
            <input type="file" name="images" id="images" multiple class="form-control" />
        </div>*@
<div class="mb-3">
    <label for="images" class="form-label">Dessert Images:</label>
    @*@foreach (var imageName in Model.DessertImageNames)
        {
            <div>
                <img src="~/Uploads/@imageName" style="width: 25%" />
            </div>
        }*@
    @foreach (var imageName in Model.DessertImageNames)
    {
        <div>
            <img src="@Url.Content("~/Uploads/" + imageName)" style="width: 25%" />
        </div>
    }
    <input type="file" name="images" id="images" multiple class="form-control" />
</div>

    @*<div class="mb-3">
            <input type="submit" value="儲存" class="btn btn-primary" />
        </div>*@
<div class="d-flex">
    
        <input type="submit" value="Save" class="btn btn-outline-primary" />
        @Html.ActionLink("Cancel", "Index", "Desserts", null, new { @class = "btn btn-outline-secondary" })
    
</div>
</div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</main>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
