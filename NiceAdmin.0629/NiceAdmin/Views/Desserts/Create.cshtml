@model NiceAdmin.Models.ViewModels.DessertCreateVM

@{
    ViewBag.Title = "Create";
}
<main id="main" class="main">

    <!-- End Page Title -->

    <div class="pagetitle mt-3">
        <h1>新增甜點</h1>
        <nav class="mt-2">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">首頁</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Index","Desserts")">甜點管理</a></li>
                <li class="breadcrumb-item active"><a href="@Url.Action("Create","Desserts")">新增甜點</a></li>
            </ol>
        </nav>
    </div>
    <div class="row">
        <div class="card">
            <div class="card-body">
                @using (Html.BeginForm("Create", "Desserts", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="col d-flex mt-3">
                        <div class="col-4 me-3">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="mb-3 ">
                                @Html.LabelFor(model => model.DessertName, htmlAttributes: new { @class = "form-label col-md-2" })

                                @Html.EditorFor(model => model.DessertName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DessertName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-4 me-3">
                            <div class="mb-3 ">
                                @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "form-label col-md-2" })
                                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-select" })
                                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-3">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "form-label col-md-2" })

                                @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-10">

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label col-md-2" })
                            @*@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div id="previewContainer">
                        <!-- 預覽圖像 動態生成 -->
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.DessertImageName, htmlAttributes: new { @class = "form-label col-md-2" })
                        <div class="col-md-10">
                            <input type="file" id="files" name="images" multiple class="form-control" accept="image/*" />
                        </div>
                    </div>
                    <div class="col d-flex">
                        <div class="col-3 me-3">
                            <div class="mt-3 mb-3 d-flex">
                                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "form-label col-md-2" })

                                <div class="checkbox">
                                    @*@Html.EditorFor(model => model.Status)*@
                                    @Html.CheckBoxFor(model => model.Status)
                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>
                        <div class="col-7 me-3">
                            <div class="mt-3 mb-3 d-flex">
                                @Html.LabelFor(model => model.ScheduledPublishDate, htmlAttributes: new { @class = "form-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.ScheduledPublishDate, new { @class = "form-control", type = "datetime-local" })
                                    @Html.ValidationMessageFor(model => model.ScheduledPublishDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="mb-3">
                        <input type="submit" value="新增" class="btn btn-outline-primary" />
                    </div>
                }
                @*<div>
                    @Html.ActionLink("Back to List", "Index")
                </div>*@

            </div>
        </div>
    </div>
</main>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $('#files').change(function () {
            var files = this.files;
            var container = $('#previewContainer');
            container.empty(); // 清空預覽容器

            for (var i = 0; i < files.length; i++) {
                var file = files[i];
                var reader = new FileReader();
                reader.onload = (function (file) {
                    return function (e) {
                        var img = $('<img>').attr('src', e.target.result).css({ width: '120px', height: '120px' });
                        container.append(img); // 將圖片加到容器裡面
                    };
                })(file);
                reader.readAsDataURL(file);
            }
        });
    </script>

}
